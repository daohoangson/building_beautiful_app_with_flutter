import 'package:building_beautiful_app_with_flutter/src/widget/flutter.dart';
import 'package:charts_flutter/flutter.dart' as charts;

// Category: Computers & Electronics
// Week,flutter: (Worldwide),react native: (Worldwide)
const csv = '''
2017-01-01,1,36
2017-01-08,2,36
2017-01-15,2,34
2017-01-22,1,39
2017-01-29,2,37
2017-02-05,2,42
2017-02-12,1,48
2017-02-19,2,50
2017-02-26,3,42
2017-03-05,1,48
2017-03-12,2,45
2017-03-19,3,47
2017-03-26,2,53
2017-04-02,1,48
2017-04-09,0,44
2017-04-16,1,45
2017-04-23,1,50
2017-04-30,2,51
2017-05-07,4,59
2017-05-14,3,49
2017-05-21,2,51
2017-05-28,2,55
2017-06-04,1,56
2017-06-11,1,59
2017-06-18,2,57
2017-06-25,2,53
2017-07-02,2,57
2017-07-09,2,60
2017-07-16,2,61
2017-07-23,1,63
2017-07-30,1,63
2017-08-06,1,60
2017-08-13,2,57
2017-08-20,1,59
2017-08-27,3,57
2017-09-03,1,59
2017-09-10,2,64
2017-09-17,2,55
2017-09-24,2,60
2017-10-01,2,52
2017-10-08,2,58
2017-10-15,1,67
2017-10-22,2,66
2017-10-29,2,63
2017-11-05,3,68
2017-11-12,3,68
2017-11-19,2,62
2017-11-26,2,64
2017-12-03,4,65
2017-12-10,2,65
2017-12-17,2,71
2017-12-24,3,54
2017-12-31,3,55
2018-01-07,1,73
2018-01-14,2,68
2018-01-21,3,67
2018-01-28,4,72
2018-02-04,3,74
2018-02-11,3,68
2018-02-18,3,70
2018-02-25,13,67
2018-03-04,9,74
2018-03-11,8,79
2018-03-18,9,76
2018-03-25,9,84
2018-04-01,8,77
2018-04-08,9,85
2018-04-15,10,72
2018-04-22,8,79
2018-04-29,10,77
2018-05-06,12,74
2018-05-13,11,76
2018-05-20,13,80
2018-05-27,9,72
2018-06-03,15,78
2018-06-10,10,90
2018-06-17,17,79
2018-06-24,15,89
2018-07-01,15,76
2018-07-08,12,83
2018-07-15,12,83
2018-07-22,14,79
2018-07-29,14,86
2018-08-05,16,90
2018-08-12,14,79
2018-08-19,15,86
2018-08-26,13,73
2018-09-02,12,80
2018-09-09,15,83
2018-09-16,14,97
2018-09-23,14,84
2018-09-30,13,80
2018-10-07,17,85
2018-10-14,15,77
2018-10-21,15,77
2018-10-28,15,80
2018-11-04,17,70
2018-11-11,18,80
2018-11-18,16,74
2018-11-25,19,81
2018-12-02,29,77
2018-12-09,27,81
2018-12-16,21,72
2018-12-23,22,60
2018-12-30,23,61
2019-01-06,27,78
2019-01-13,30,72
2019-01-20,29,78
2019-01-27,28,77
2019-02-03,24,74
2019-02-10,26,80
2019-02-17,26,82
2019-02-24,27,79
2019-03-03,29,73
2019-03-10,35,84
2019-03-17,29,81
2019-03-24,35,82
2019-03-31,32,82
2019-04-07,33,82
2019-04-14,31,76
2019-04-21,32,75
2019-04-28,28,74
2019-05-05,40,79
2019-05-12,39,85
2019-05-19,36,84
2019-05-26,45,85
2019-06-02,39,78
2019-06-09,38,89
2019-06-16,43,90
2019-06-23,42,87
2019-06-30,48,88
2019-07-07,45,98
2019-07-14,46,98
2019-07-21,47,92
2019-07-28,45,94
2019-08-04,48,93
2019-08-11,44,87
2019-08-18,51,94
2019-08-25,49,94
2019-09-01,50,93
2019-09-08,51,96
2019-09-15,54,100
2019-09-22,58,98
2019-09-29,49,87
2019-10-06,55,88
2019-10-13,57,93
2019-10-20,55,85
2019-10-27,50,80
2019-11-03,53,83
2019-11-10,52,86
2019-11-17,57,93
2019-11-24,61,89
2019-12-01,55,84
2019-12-08,59,90
2019-12-15,60,85
2019-12-22,47,65
2019-12-29,52,63
2020-01-05,57,86
2020-01-12,61,77
2020-01-19,60,91
2020-01-26,60,97
2020-02-02,62,90
2020-02-09,73,93
2020-02-16,66,91
2020-02-23,69,88
2020-03-01,69,93
2020-03-08,64,76
2020-03-15,64,81
2020-03-22,66,78
2020-03-29,67,86
2020-04-05,70,89
2020-04-12,70,89
2020-04-19,72,85
2020-04-26,79,86
2020-05-03,72,86
2020-05-10,81,89
2020-05-17,76,91
2020-05-24,76,83
2020-05-31,75,88
2020-06-07,85,91
2020-06-14,79,90
2020-06-21,78,87
2020-06-28,86,94
2020-07-05,84,99
2020-07-12,87,92
2020-07-19,85,94
2020-07-26,87,89
2020-08-02,88,88
2020-08-09,85,88
2020-08-16,85,83
2020-08-23,84,87
2020-08-30,83,84
2020-09-06,84,87
2020-09-13,78,79
2020-09-20,86,85
2020-09-27,68,66
2020-10-04,68,64
2020-10-11,68,62
2020-10-18,65,52
2020-10-25,63,55
2020-11-01,57,53
2020-11-08,60,54
2020-11-15,63,57
2020-11-22,56,54
2020-11-29,69,52
2020-12-06,66,45
''';

class GoogleTrendsRnBody extends StatelessWidget {
  final List<charts.Series> seriesList;

  GoogleTrendsRnBody._(this.seriesList);

  @override
  Widget build(BuildContext context) {
    return charts.TimeSeriesChart(
      seriesList,
      animate: false,
      behaviors: [
        charts.RangeAnnotation(
          [
            charts.LineAnnotationSegment(
              DateTime(2018, 02, 25),
              charts.RangeAnnotationAxisType.domain,
              startLabel: 'MWC 2018',
            ),
            charts.LineAnnotationSegment(
              DateTime(2018, 12, 02),
              charts.RangeAnnotationAxisType.domain,
              endLabel: 'v1.0.0 release',
            ),
          ],
        ),
        charts.SeriesLegend(),
      ],
    );
  }

  static Widget builder() => Expanded(
        child: GoogleTrendsRnBody._(
          _parseCsv(),
        ),
      );
}

class _DataPoint {
  final DateTime time;
  final int value;

  _DataPoint(this.time, this.value);
}

List<charts.Series<_DataPoint, DateTime>> _parseCsv() {
  final lines = csv.trim().split('\n');
  final flutter = List<_DataPoint>(lines.length);
  final reactNative = List<_DataPoint>(lines.length);
  for (var i = 0; i < lines.length; i++) {
    final strs = lines[i].split(',');
    final dateTime = DateTime.parse(strs[0]);
    flutter[i] = _DataPoint(dateTime, int.parse(strs[1]));
    reactNative[i] = _DataPoint(dateTime, int.parse(strs[2]));
  }

  return [
    charts.Series<_DataPoint, DateTime>(
      id: 'Flutter',
      domainFn: _domainFn,
      measureFn: _measureFn,
      data: flutter,
    ),
    charts.Series<_DataPoint, DateTime>(
      id: 'React Native',
      domainFn: _domainFn,
      measureFn: _measureFn,
      data: reactNative,
    ),
  ];
}

DateTime _domainFn(_DataPoint p, int index) => p.time;

int _measureFn(_DataPoint p, int index) => p.value;
